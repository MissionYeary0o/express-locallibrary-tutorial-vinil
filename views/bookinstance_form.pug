extends layout

block content
  style.
    body {
      background-color: #1e1e1e; /* Fundo azul escuro */
      color: #fff; /* Cor do texto */
      font-family: Arial, sans-serif;
    }

    h1 {
      color: #ff5733; /* Cor do título */
    }

    p {
      color: #b0b0b0; /* Cor do texto normal */
    }

    ul {
      list-style: none;
      padding: 0;
    }

    li {
      margin-bottom: 5px;
      /* Adicione mudanças de cor leves aqui, por exemplo, alternando entre duas cores */
    }

    li:nth-child(odd) {
      background-color: #353535; /* Cor de fundo para linhas ímpares */
    }

    li:nth-child(even) {
      background-color: #2e2e2e; /* Cor de fundo para linhas pares */
    }

  .container
  h1=title

  form(method='POST' action='')
    div.form-group
      label(for='book') Book:
      select#book.form-control(type='select', placeholder='Select book' name='book' required='true' )
        - book_list.sort(function(a, b) {let textA = a.title.toUpperCase(); let textB = b.title.toUpperCase(); return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;});
        for book in book_list
          option(value=book._id, selected=(selected_book==book._id.toString() ? 'selected' : false) ) #{book.title}

    div.form-group
      label(for='imprint') Imprint:
      input#imprint.form-control(type='text', placeholder='Publisher and date information' name='imprint' required='true' value=(undefined===bookinstance ? '' : bookinstance.imprint) )
    div.form-group
      label(for='due_back') Date when book available:
      input#due_back.form-control(type='date', name='due_back' value=(undefined===bookinstance ? '' : bookinstance.due_back_yyyy_mm_dd))

    div.form-group
      label(for='status') Status:
      select#status.form-control(type='select', placeholder='Select status' name='status' required='true' )
        option(value='Maintenance' selected=(undefined===bookinstance || bookinstance.status!='Maintenance' ? false:'selected')) Maintenance
        option(value='Available' selected=(undefined===bookinstance || bookinstance.status!='Available' ? false:'selected')) Available
        option(value='Loaned' selected=(undefined===bookinstance || bookinstance.status!='Loaned' ? false:'selected')) Loaned
        option(value='Reserved' selected=(undefined===bookinstance || bookinstance.status!='Reserved' ? false:'selected')) Reserved

    button.btn.btn-primary(type='submit') Submit

  if errors
    ul
      for error in errors
        li!= error.msg
